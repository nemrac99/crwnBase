{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carmen.johnson\\\\Documents\\\\workspace\\\\React\\\\crwnBase\\\\src\\\\contexts\\\\user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from '../utils/firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  setCurrentUser: () => null,\n  currentUser: null\n});\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n};\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\n      return { ...state,\n        currentUser: payload\n      };\n\n    default:\n      throw new Error(`Unhandled type ${type} in userReducer`);\n  }\n};\n\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [{\n    currentUser\n  }, dispatch] = useReducer(userReducer, INITIAL_STATE);\n\n  const setCurrentUser = user => dispatch({\n    type: USER_ACTION_TYPES.SET_CURRENT_USER,\n    currentUser: user\n  });\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"4MCG2lfWYDhUrag1f5xCpMt+rJI=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/carmen.johnson/Documents/workspace/React/crwnBase/src/contexts/user.context.jsx"],"names":["createContext","useEffect","useReducer","onAuthStateChangedListener","createUserDocumentFromAuth","UserContext","setCurrentUser","currentUser","USER_ACTION_TYPES","SET_CURRENT_USER","INITIAL_STATE","userReducer","state","action","type","payload","Error","UserProvider","children","dispatch","user","unsubscribe","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AAEA,SACEC,0BADF,EAEEC,0BAFF,QAGO,kCAHP;;AAKA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;AACvCM,EAAAA,cAAc,EAAE,MAAM,IADiB;AAEvCC,EAAAA,WAAW,EAAE;AAF0B,CAAD,CAAjC;AAKP,OAAO,MAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,gBAAgB,EAAE;AADa,CAA1B;AAIP,MAAMC,aAAa,GAAG;AACpBH,EAAAA,WAAW,EAAE;AADO,CAAtB;;AAIA,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKN,iBAAiB,CAACC,gBAAvB;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYL,QAAAA,WAAW,EAAEQ;AAAzB,OAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAW,kBAAiBF,IAAK,iBAAjC,CAAN;AAJJ;AAMD,CATD;;AAWA,OAAO,MAAMG,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAAC;AAAEX,IAAAA;AAAF,GAAD,EAAkBY,QAAlB,IAA8BjB,UAAU,CAACS,WAAD,EAAcD,aAAd,CAA9C;;AAEA,QAAMJ,cAAc,GAAIc,IAAD,IACrBD,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,iBAAiB,CAACC,gBAA1B;AAA4CF,IAAAA,WAAW,EAAEa;AAAzD,GAAD,CADV;;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,WAAW,GAAGlB,0BAA0B,CAAEiB,IAAD,IAAU;AACvD,UAAIA,IAAJ,EAAU;AACRhB,QAAAA,0BAA0B,CAACgB,IAAD,CAA1B;AACD;;AACDd,MAAAA,cAAc,CAACc,IAAD,CAAd;AACD,KAL6C,CAA9C;AAOA,WAAOC,WAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,QAAMC,KAAK,GAAG;AACZf,IAAAA;AADY,GAAd;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,KAA7B;AAAA,cAAqCJ;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\r\n\r\nimport {\r\n  onAuthStateChangedListener,\r\n  createUserDocumentFromAuth,\r\n} from '../utils/firebase/firebase.utils';\r\n\r\nexport const UserContext = createContext({\r\n  setCurrentUser: () => null,\r\n  currentUser: null,\r\n});\r\n\r\nexport const USER_ACTION_TYPES = {\r\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n};\r\n\r\nconst userReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\r\n      return { ...state, currentUser: payload };\r\n    default:\r\n      throw new Error(`Unhandled type ${type} in userReducer`);\r\n  }\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [{ currentUser }, dispatch] = useReducer(userReducer, INITIAL_STATE);\r\n\r\n  const setCurrentUser = (user) =>\r\n    dispatch({ type: USER_ACTION_TYPES.SET_CURRENT_USER, currentUser: user });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangedListener((user) => {\r\n      if (user) {\r\n        createUserDocumentFromAuth(user);\r\n      }\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n  };\r\n\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}